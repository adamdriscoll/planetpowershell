variables:
- group: PlanetPowerShellShared
- name: solution
  value: '**/*.sln'
- name: buildPlatform
  value: 'Any CPU'
- name: buildConfiguration
  value: 'Release'

stages:

- stage: build
  jobs:
  - job: build_planetpowershell
    displayName: 'Build PlanetPowerShell'
    pool:
      vmImage: 'VS2017-Win2016'
    steps:
    - checkout: self
      persistCredentials: true
      clean: true
    - task: NuGetToolInstaller@0
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: VSTest@2
      inputs:
        testAssemblyVer2: |
          **\$(BuildConfiguration)\*test*.dll
          !**\obj\**
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        ArtifactName: 'planetpowershell'
  - job: validate_armtemplate
    displayName: 'Validate ARM Template'
    pool:
      vmImage: 'VS2017-Win2016'
    steps:
    - checkout: self
      persistCredentials: true
      clean: true
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: '${{ variables.devSubscriptionName }}'
        subscriptionId: '${{ variables.devSubscriptionID }}'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'PlanetPowerShell-Dev-RG'
        location: 'East US 2'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/src/AzureDeploy/azuredeploy.json'
        overrideParameters: $(DevAzureParameters)
        deploymentMode: 'Validation'

- stage: release
  dependsOn: build
  jobs:
  - deployment: deploy_development
    displayName: 'Deploy Development'
    pool:
      vmImage: VS2017-Win2016
    environment: 'PlanetPowerShell Dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            clean: true
            persistCredentials: true
          - download: current
            artifact: 'planetpowershell'
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: '${{ variables.devSubscriptionName }}'
              subscriptionId: '${{ variables.devSubscriptionID }}'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'PlanetPowerShell-Dev-RG'
              location: 'East US 2'
              templateLocation: 'Linked artifact'
              csmFile: '$(System.DefaultWorkingDirectory)/src/AzureDeploy/azuredeploy.json'
              overrideParameters: $(DevAzureParameters)
              deploymentMode: 'Incremental'
          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy Azure App Service'
            inputs:
              azureSubscription: '${{ variables.devSubscriptionName }}'
              WebAppName: PlanetPowerShell-Dev
          - task: staff0rd.tfx-cloudflare-purge.custom-build-release-task.tfx-cloudflare-purge@1
            displayName: 'Purge Cloudflare cache'
            inputs:
              username: '$(cloudflareapiuser)'
              apikey: '$(cloudflareapikey)'
              zonename: planetpowershell.com
          - task: luuksommers.website-warmup.website-warmup.Website Warmup@2
            displayName: 'Warmup website'
            inputs:
              Urls: 'https://dev.planetpowershell.com'
          - task: kasunkodagoda.ssl-labs-test.ssl-labs-test.ssl-labs-test@1
            displayName: 'SSL Labs Test'
            inputs:
              hostname: 'https://dev.planetpowershell.com'
              freshScan: true
              publishScanResults: true
              enableVerification: true
              enableExpirationAlert: true
              daysBeforeExpiration: 5
            
  - deployment: deploy_production
    displayName: 'Deploy Production'
    dependsOn: deploy_development
    pool:
      vmImage: VS2017-Win2016
    environment: 'PlanetPowerShell Prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            clean: true
            persistCredentials: true
          - download: current
            artifact: 'planetpowershell'
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: '${{ variables.prodSubscriptionName }}'
              subscriptionId: '${{ variables.prodSubscriptionID }}'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'PlanetPowerShell-Prod-RG'
              location: 'East US 2'
              templateLocation: 'Linked artifact'
              csmFile: '$(System.DefaultWorkingDirectory)/src/AzureDeploy/azuredeploy.json'
              overrideParameters: $(ProdAzureParameters)
              deploymentMode: 'Incremental'