variables:
  - group: PlanetPowerShellShared
  - name: solution
    value: '**/*.sln'
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'
  
stages:

- stage: build
  jobs:
  - job: build_planetpowershell
    displayName: 'Build PlanetPowerShell'
    pool:
      vmImage: 'VS2017-Win2016'
    steps:
    - checkout: self
      persistCredentials: true
      clean: true
    - task: NuGetToolInstaller@0
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: VSTest@2
      inputs:
        testAssemblyVer2: |
          **\$(BuildConfiguration)\*test*.dll
          !**\obj\**
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        ArtifactName: 'planetpowershell'


- stage: release
  dependsOn: build
  jobs:
  - deployment: deploy_development
    displayName: 'Deploy Development'
    pool:
      vmImage: VS2017-Win2016
    environment: 'PlanetPowerShell Dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: deploy_environment.yml
            parameters:
              resourceGroup: 'PlanetPowerShell-Dev-RG'
              connectionName: '$(devSubscriptionName)'
              subscriptionID: '$(devSubscriptionID)'
              azureDeployParameters: '$(DevAzureParameters)'
              webAppName: 'PlanetPowerShell-Dev'
              cloudflareapiuser: '$(cloudflareapiuser)'
              cloudflareapikey: '$(cloudflareapikey)'
              hostname: 'dev.planetpowershell.com'


